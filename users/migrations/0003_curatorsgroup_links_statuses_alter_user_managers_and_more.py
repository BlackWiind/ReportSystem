# Generated by Django 5.1 on 2025-02-07 03:24

import django.contrib.auth.models
import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0002_alter_user_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='CuratorsGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Курируемая группа')),
            ],
            options={
                'verbose_name': 'Карируемая группа',
                'verbose_name_plural': 'Курируемые группы',
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название ссылки')),
                ('link', models.CharField(max_length=255, verbose_name='Ссылка на страницу')),
            ],
            options={
                'verbose_name': 'Ссылка',
                'verbose_name_plural': 'Доступные ссылки',
            },
        ),
        migrations.CreateModel(
            name='Statuses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Статус')),
                ('verbose_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Видимое имя')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('custom_objects', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='job_title',
            field=models.CharField(default='Не указанна', max_length=255, verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='department',
            name='curators_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.curatorsgroup', verbose_name='Курируемая группа'),
        ),
        migrations.AddField(
            model_name='user',
            name='curators_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.curatorsgroup', verbose_name='Курируемая группа'),
        ),
        migrations.CreateModel(
            name='CuratorToDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Куратор')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.department', verbose_name='Курируемый отдел')),
            ],
        ),
        migrations.CreateModel(
            name='PossibleActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Действие')),
                ('verbose_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Видимое имя')),
                ('new_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.statuses', verbose_name='Новый статус')),
                ('required_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='required_status', to='users.statuses', verbose_name='Требуемый статус')),
            ],
            options={
                'verbose_name': 'Действие',
                'verbose_name_plural': 'Возможные действия',
            },
        ),
        migrations.CreateModel(
            name='CustomGroups',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название группы')),
                ('links', models.ManyToManyField(to='users.links', verbose_name='Доступные страницы')),
                ('possible_actions', models.ManyToManyField(to='users.possibleactions', verbose_name='Возможные действия')),
                ('statuses', models.ManyToManyField(blank=True, to='users.statuses', verbose_name='Доступные статусы')),
            ],
            options={
                'verbose_name': 'Кастомная группа',
                'verbose_name_plural': 'Кастомные группы',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='VocationsSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vocation_start', models.DateField(verbose_name='Начало отпуска')),
                ('vocation_end', models.DateField(verbose_name='Конец отпуска')),
                ('deputy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deputy_user', to=settings.AUTH_USER_MODEL, verbose_name='Заместитель')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.customgroups', verbose_name='группа заместителя')),
                ('vocation_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь в отпуске')),
            ],
        ),
    ]
