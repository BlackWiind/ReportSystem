# Generated by Django 5.1 on 2025-03-19 04:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reports', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='history',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='report',
            name='assigned_purchasing_specialist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assigned_purchasing_specialist', to=settings.AUTH_USER_MODEL, verbose_name='Специалист отдела закупок'),
        ),
        migrations.AddField(
            model_name='report',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='report',
            name='curators_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.curatorsgroup', verbose_name='Курируемая группа'),
        ),
        migrations.AddField(
            model_name='report',
            name='files',
            field=models.ManyToManyField(blank=True, to='reports.files', verbose_name='Прикреплённые файлы'),
        ),
        migrations.AddField(
            model_name='report',
            name='history',
            field=models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_sources', to='reports.history', verbose_name='История'),
        ),
        migrations.AddField(
            model_name='report',
            name='parents',
            field=models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_sources', to='reports.report', verbose_name='Родитель'),
        ),
        migrations.AddField(
            model_name='report',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='responsible', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный специалист'),
        ),
        migrations.AddField(
            model_name='report',
            name='status',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.statuses', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='report',
            name='sources_of_funding',
            field=models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_sources', to='reports.sourcesoffunding', verbose_name='Источники финансирования'),
        ),
        migrations.AddField(
            model_name='tag',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.curatorsgroup', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='report',
            name='tags',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_tags', to='reports.tag', verbose_name='Теги'),
        ),
        migrations.AddField(
            model_name='waitingstatusforuser',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Получатель'),
        ),
        migrations.AddField(
            model_name='waitingstatusforuser',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.report', verbose_name='Рапорт'),
        ),
        migrations.AddField(
            model_name='waitingstatusforuser',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель'),
        ),
    ]
