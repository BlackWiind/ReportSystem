services:
  pg_db:
    container_name: postgres_container
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    networks:
      - report_network
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env


  pg_admin:
    container_name: pg_admin_container
    image: dpage/pgadmin4
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - report_network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  report_web:
    container_name: report_web
    build: .
    command: sh -c "python manage.py collectstatic --noinput &&
              python manage.py makemigrations --noinput &&
              python manage.py migrate --noinput &&
              python manage.py add_superuser &&
              python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/reports_web
      - static_volume:/static/
      - media_volume:/media/
    env_file:
      - .env
    networks:
      - report_network
    ports:
      - 3000:8000
    restart: always
    depends_on:
      - pg_db

#  nginx:
#    build:
#      dockerfile: ./Dockerfile
#      context: ./Docker/nginx/
#    ports:
#      - "${NGINX_EXTERNAL_PORT}:80"
#      - "${NGINX_EXTERNAL_SSL_PORT}:443"
#    volumes:
#      - ./Docker/nginx/certs:/etc/nginx/certs
#      - static_volume:/static/
#      - media_volume:/media/
#    depends_on:
#      - report_web
#    restart:
#        always

  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    networks:
      - report_network
    restart: always

  worker:
    build: .
    hostname: worker
    entrypoint: celery
    command: -A config worker --loglevel=info
    restart: always
    volumes:
      - .:/report_web
    links:
      - redis
    networks:
      - report_network
    depends_on:
      - redis

  celery-beat:
    build: .
    hostname: celery-beat
    entrypoint: celery
    command: -A config beat --loglevel=info
    restart: always
    volumes:
      - .:/report_web
    links:
      - redis
    networks:
      - report_network
    depends_on:
      - redis


  flower:
    build: .
    hostname: flower
    entrypoint: celery
    command: -A config.celery.app flower -l info
    restart: always
    volumes:
      - .:/report_web
    links:
      - redis
    depends_on:
      - redis
    networks:
      - report_network
    ports:
      - 5555:5555

networks:
  report_network:
    driver: bridge


volumes:
  static_volume:
  media_volume:
  postgres_data:
  pgadmin-data: